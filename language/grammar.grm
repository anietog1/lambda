{ # lambda language grammar definition
  # taken and adapted from:
  # https://en.wikipedia.org/wiki/Lambda_calculus_definition
 {
  ID = '[a-z]', # single letter identifiers
  '\', # 'lambda' symbol
  '.',
  '(', ')'
 },
 {
  expression -> '\' variablelist '.' expression
              | applicationterm,
  variablelist -> variablelist ID
                | ID,
  applicationterm -> applicationterm item
                   | item,
  item -> ID
        | '(' expression ')'
 },
 expression
}

# examples:
# \xyz.xy
# \x.\y.\z.xy
# \xy.x
# \x.x(\y.y)
# \x. x z (\y. x y)

# the question is: how can i avoid all the parentheses?
